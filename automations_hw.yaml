- alias: Auto update - GitHub
  trigger:
    - platform: time
      at: '06:30:00'
  action:
    - service: shell_command.auto_update

- alias: Auto update IP
  trigger:
    - platform: time_pattern
      hours: '/3'
      minutes: 0
      seconds: 0
  action:
    - service: rest_command.update_ip

- alias: CPU Alarm
  trigger:
    - platform: numeric_state
      entity_id: sensor.processor_use
      above: 90
      for:
        hours: 1
  action:
    - service: notify.alex
      data:
        message: '⚠ CPU Alarm ⚠'

- alias: Interruttore ON
  trigger:
    - platform: state
      entity_id: binary_sensor.interruttore
      from: 'off'
      to: 'on'
  action:
    - service: light.turn_on
      data:
        entity_id: light.luce_bianca
    - service: script.turn_off
      data:
        entity_id: script.luce_notte

- alias: Interruttore OFF - Giorno
  trigger:
    - platform: state
      entity_id: binary_sensor.interruttore
      from: 'on'
      to: 'off'
  condition:
    - condition: time
      after: '07:00'
      before: '23:00'
  action:
    - service: light.turn_off
      data:
        entity_id:
          - light.luce_bianca
          - light.luce_rgb

- alias: Interruttore OFF - Notte
  trigger:
    - platform: state
      entity_id: binary_sensor.interruttore
      from: 'on'
      to: 'off'
  condition:
    - condition: time
      after: '23:00'
      before: '07:00'
  action:
    - service: script.turn_on
      data:
        entity_id: script.luce_notte

- alias: Apertura porta
  trigger:
    - platform: state
      entity_id: binary_sensor.porta
      from: 'off'
      to: 'on'
  condition:
    - condition: state
      entity_id: binary_sensor.interruttore
      state: 'on'
  action:
    - service: light.turn_on
      data:
        entity_id: light.luce_bianca

- alias: Chiusura porta
  trigger:
    - platform: state
      entity_id: binary_sensor.porta
      from: 'on'
      to: 'off'
  condition:
    - condition: state
      entity_id: binary_sensor.interruttore
      state: 'on'
  action:
    - service: light.turn_off
      data:
        entity_id:
          - light.luce_bianca
          - light.luce_rgb

- alias: Sorveglia porta
  trigger:
    - platform: state
      entity_id: 
        - binary_sensor.porta
  action:
    - service: notify.alex
      data_template:
        message: >- 
          Porta ➡ {{ states('binary_sensor.porta') }}
          
          Interruttore ➡ {{ states('binary_sensor.interruttore') }}
    - service: script.turn_on
      data:
        entity_id: script.snapshot_seq

- alias: Avviso avvio HA
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: notify.alex
      data:
        message: 'Avvio HA completato'

- alias: Avviso arresto HA
  trigger:
    - platform: homeassistant
      event: shutdown
  action:
    - service: notify.alex
      data:
        message: 'Arresto HA completato'

- alias: Telegram - Info
  trigger:
    - platform: event
      event_type: telegram_text
      event_data:
        text: Info
  action:
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.chat_id }}"
        keyboard:
          - 'Info, Snapshot'
          - 'Sorveglia, Sveglia'
          - 'Luce, Riavvia HA'
        message: >-
          {% macro adv_states(entity) -%}
            {%- if states(entity) == 'on' %}✅
            {%- elif states(entity) == 'off' %}⛔
            {%- else %}⚠
            {%- endif %}
          {%- endmacro %}
          
          CPU: *{{ states('sensor.processor_use') }}%*
          
          CPU Temp: *{{ states('sensor.processor_temp') }} °C*
          
          Uptime: *{{ states('sensor.uptime') }} ore*
          
          Carica telefono: *{{ adv_states('switch.carica_telefono') }}*
          
          Livello batteria: *{{ states('sensor.ip_camera_battery_level') }}%*
          
          Sorveglia: *{{ adv_states('automation.sorveglia_porta') }}*
          
          Sveglia: *{{ adv_states('script.luce_sveglia') }}*
          
          Porta: *{{ adv_states('binary_sensor.porta') }} ➡ {{ states.binary_sensor.porta.last_changed | as_timestamp() | timestamp_custom('%H:%M:%S', False) }}*
          
          Luce: *{{ adv_states('light.luce_bianca') }}*

- alias: Telegram - Snapshot
  trigger:
    - platform: event
      event_type: telegram_text
      event_data:
        text: Snapshot
  action:
    - service: camera.snapshot
      data:
        entity_id: camera.ip_camera
        filename: '/tmp/snap_manual.jpg'
    - service: telegram_bot.send_photo
      data:
        file: '/tmp/snap_manual.jpg'

- alias: Telegram - Sorveglia
  trigger:
    - platform: event
      event_type: telegram_text
      event_data:
        text: Sorveglia
  action:
    - service: automation.toggle
      data:
        entity_id: automation.sorveglia_porta

- alias: Telegram - Sveglia
  trigger:
    - platform: event
      event_type: telegram_text
      event_data:
        text: Sveglia
  action:
    - service: script.toggle
      data:
        entity_id: script.luce_sveglia

- alias: Telegram - Luce
  trigger:
    - platform: event
      event_type: telegram_text
      event_data:
        text: Luce
  action:
    - service: light.toggle
      data:
        entity_id: light.luce_bianca

- alias: Telegram - Riavvia HA
  trigger:
    - platform: event
      event_type: telegram_text
      event_data:
        text: 'Riavvia HA'
  action:
    - service: homeassistant.restart

- alias: Carica telefono - ON
  trigger:
    - platform: numeric_state
      entity_id: sensor.ip_camera_battery_level
      below: 20
  action:
    - service: switch.turn_on
      data:
        entity_id: switch.carica_telefono

- alias: Carica telefono - OFF
  trigger:
    - platform: numeric_state
      entity_id: sensor.ip_camera_battery_level
      above: 95
  action:
    - service: switch.turn_off
      data:
        entity_id: switch.carica_telefono

# - alias: Luci natale ON
#   trigger:
#     - platform: time
#       at: '16:00:00'
#   action:
#     - service: light.turn_on
#       data:
#         entity_id:
#           - light.luci_natale_sala
#           - light.luci_natale_studio
#           - light.luci_albero

# - alias: Luci natale OFF
#   trigger:
#     - platform: time
#       at: '01:00:00'
#   action:
#     - service: light.turn_off
#       data:
#         entity_id:
#           - light.luci_natale_sala
#           - light.luci_natale_studio
#           - light.luci_albero
